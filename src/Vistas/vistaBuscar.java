/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Entidades.Contactos;
import Entidades.Directorio;
import static Vistas.VistaPrincipal.datos;
import java.util.ArrayList;
import java.util.TreeMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Netbook
 */
public class vistaBuscar extends javax.swing.JInternalFrame {

    DefaultTableModel modelo = new DefaultTableModel();

    /**
     * Creates new form vistaBuscar
     */
    public vistaBuscar() {

        initComponents();
        iniciarTabla();
        cargarDatos(VistaPrincipal.direc.getDirectorio());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDirectorio = new javax.swing.JTable();
        jbEliminar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        mbFiltrar = new javax.swing.JMenu();
        miFiltrarPorCiudad = new javax.swing.JMenuItem();
        miTelefono = new javax.swing.JMenuItem();
        mbSalir = new javax.swing.JMenu();

        setTitle("Directorio");

        jDesktopPane1.setBackground(new java.awt.Color(102, 255, 255));

        tablaDirectorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaDirectorio);

        jbEliminar.setText("ELIMINAR");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jbEliminar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(254, 254, 254)
                .addComponent(jbEliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbEliminar)
                .addContainerGap())
        );

        mbFiltrar.setText("Filtrar");

        miFiltrarPorCiudad.setText("Filtrar por Ciudad");
        miFiltrarPorCiudad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miFiltrarPorCiudadActionPerformed(evt);
            }
        });
        mbFiltrar.add(miFiltrarPorCiudad);

        miTelefono.setText("Filtrar por Telefono");
        miTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miTelefonoActionPerformed(evt);
            }
        });
        mbFiltrar.add(miTelefono);

        jMenuBar1.add(mbFiltrar);

        mbSalir.setText("Salir");
        mbSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mbSalirMouseClicked(evt);
            }
        });
        mbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbSalirActionPerformed(evt);
            }
        });
        jMenuBar1.add(mbSalir);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbSalirActionPerformed
        // minimiza la ventana

    }//GEN-LAST:event_mbSalirActionPerformed

    private void mbSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mbSalirMouseClicked
        // esconde la ventana
        hide();

    }//GEN-LAST:event_mbSalirMouseClicked

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        int filaSeleccionada = tablaDirectorio.getSelectedRow();  // OBTENGO LA FILA

        if (filaSeleccionada != -1) {  // VERIFICO QUE UNA FILA ESTE SELCCIONADA
            // OBTENGO EL TELEFONO DE LA FILA
            Long telefono = (Long) tablaDirectorio.getValueAt(filaSeleccionada, 5);

            // ELIMINO DEL TREEMAP
            VistaPrincipal.getDirec().borrarContacto(telefono);

            // ELIMINO LA FILA
            modelo.removeRow(filaSeleccionada);

        } else {
            JOptionPane.showMessageDialog(this, "No se seleccionó ninguna fila.");
        }
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void miFiltrarPorCiudadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFiltrarPorCiudadActionPerformed
        ArrayList lista = VistaPrincipal.getDirec().buscarVariosContactos(JOptionPane.showInputDialog(rootPane, "Ingrese una Ciudad", null, HEIGHT));
        if (lista.size() == 0) {
            JOptionPane.showMessageDialog(rootPane, "No existe");
        } else {
            modelo.setRowCount(0);
            for (Object ele : lista) {
                Contactos c = (Contactos) ele;
                modelo.addRow(new Object[]{c.getDni(), c.getNombre(), c.getApellido(), c.getDireccion(), c.getCiudad(), c.getTelefono()});
            }
        }
    }//GEN-LAST:event_miFiltrarPorCiudadActionPerformed

    private void miTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miTelefonoActionPerformed
        modelo.setRowCount(0);
        try{
            String t = JOptionPane.showInputDialog(rootPane, "Ingrese un Número");
            if (t != null && !t.trim().isEmpty()) {
               
                Long tel = Long.parseLong(t);

                
                Contactos c = VistaPrincipal.getDirec().buscarUnContacto(tel);

                modelo.addRow(new Object[]{c.getDni(), c.getNombre(), c.getApellido(), c.getDireccion(), c.getCiudad(), c.getTelefono()});
            }else
                JOptionPane.showMessageDialog(rootPane, "Contacto no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
            }catch (NullPointerException np) {

            JOptionPane.showMessageDialog(this, "ingrese un numero correcto");
        }


    }//GEN-LAST:event_miTelefonoActionPerformed

    

    public void iniciarTabla() {

        modelo.addColumn("Dni");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");
        modelo.addColumn("Direccion");
        modelo.addColumn("Ciudad");
        modelo.addColumn("Telefono");
        tablaDirectorio.setModel(modelo);

    }

    public void cargarDatos(TreeMap p) {
        modelo.setRowCount(0);
        for (Object r : p.values()) {
            Contactos c = (Contactos) r;
            modelo.addRow(new Object[]{c.getDni(), c.getNombre(), c.getApellido(), c.getDireccion(), c.getCiudad(), c.getTelefono()});
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JMenu mbFiltrar;
    private javax.swing.JMenu mbSalir;
    private javax.swing.JMenuItem miFiltrarPorCiudad;
    private javax.swing.JMenuItem miTelefono;
    private javax.swing.JTable tablaDirectorio;
    // End of variables declaration//GEN-END:variables
}
